net:
    arch: resnext50_32x4d # resnext50_32x4d, resnext101_32x8d, resnext50d_32x4d, resnext101d_32x8d,
    kwargs:
        num_classes: 1000
 
dataset:
  train:
    meta_file: /mnt/lustre/share/images/meta/train.txt
    image_dir: /mnt/lustre/share/images/train
    random_resize_crop: 224
    colorjitter: [0.2, 0.2, 0.2, 0.1]
    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]
    mirror: True
  test:
    meta_file: /mnt/lustre/share/images/meta/val.txt
    image_dir: /mnt/lustre/share/images/val
    resize: 256
    center_crop: [224, 224]
    colorjitter: [0.2, 0.2, 0.2, 0.1]
    mean: [0.485, 0.456, 0.406]
    std: [0.229, 0.224, 0.225]
    mirror: False
  batch_size: 64
  workers: 4
 
trainer:
  max_epoch: 200
  test_freq: 1
  log_freq: 100
  label_smooth: 0.1
  bn:
    syncbn: False
  mixed_precision:
    half: False
    loss_scale: 128.0
    float_layers:  # define floating layers when mixed training
      # loss:
      #     float_out: True
  optimizer:
    type: SGD
    kwargs:
      lr: 0.1
      momentum: 0.9
      weight_decay: 0.0001
  lr_scheduler:
    warmup_epochs: 0
    type: MultiStepLR
    kwargs:
      milestones: [80,120]
      gamma: 0.1
 
saver:
  pretrain_model: 
  resume_model: 
  save_dir: checkpoints/resnext50_baseline   # save checkpoint locally
 
monitor:
  type: pavi
  _taskid:  # continue training
  kwargs:
    project: hyc_resnet  # change to your own pavi project
    task: resnext50_baseline
    model: resnext50
